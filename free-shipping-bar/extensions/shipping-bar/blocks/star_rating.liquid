{% comment %}
  Barra de progreso de envÃ­o gratis para Shopify.
  Editable como secciÃ³n desde el editor de temas.
{% endcomment %}

{% assign threshold = section.settings.threshold | times: 100 %}
{% assign current_total = cart.total_price %}

<style>
  /* Estilos generales */
  .shipping-bar-container-{{ section.id }} {
    width: 100%;
    max-width: 600px;
    margin: 20px auto;
    padding: 1rem;
    background-color: #f7f7f7;
    border-radius: 8px;
    box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -2px rgba(0,0,0,0.06);
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  }
  .progress-bar-wrapper-{{ section.id }} {
    width: 100%;
    background-color: #e0e0e0;
    border-radius: 15px;
    overflow: hidden;
    height: 25px;
    margin-top: 10px;
  }
  .progress-bar-{{ section.id }} {
    height: 100%;
    width: 0%;
    background: linear-gradient(90deg, #6c757d 0%, #007bff 100%);
    transition: width 0.5s ease-in-out, background-color 0.5s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
    font-size: 0.8rem;
    text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
  }
  .bar-message-{{ section.id }} {
    text-align: center;
    font-size: 1rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: #333;
  }
  .completed-{{ section.id }} .progress-bar-{{ section.id }} {
    background: linear-gradient(90deg, #28a745 0%, #17a2b8 100%);
  }
</style>

<div class="shipping-bar-container-{{ section.id }}" id="FreeShippingBar-{{ section.id }}">
  <p class="bar-message-{{ section.id }}" id="BarMessage-{{ section.id }}">Cargando...</p>
  <div class="progress-bar-wrapper-{{ section.id }}">
    <div class="progress-bar-{{ section.id }}" id="ProgressBar-{{ section.id }}"></div>
  </div>
</div>

<script>
  (function() {
    const SECTION_ID = '{{ section.id }}';
    const THRESHOLD = {{ threshold }};
    const PRE_TEXT = '{{ section.settings.pre_text | escape }}';
    const POST_TEXT = '{{ section.settings.post_text | escape }}';
    const FORMATTER = new Intl.NumberFormat('es-CL', { style: 'currency', currency: 'CLP' });

    const CONTAINER = document.getElementById(`FreeShippingBar-${SECTION_ID}`);
    const MESSAGE_ELEM = document.getElementById(`BarMessage-${SECTION_ID}`);
    const PROGRESS_ELEM = document.getElementById(`ProgressBar-${SECTION_ID}`);

    function formatMoney(cents) {
    return FORMATTER.format(Math.round(cents) / 100);
    }

    async function updateShippingBar() {
      try {
        const response = await fetch('/cart.js');
        const cart = await response.json();
        const currentTotal = cart.total_price;

        if (!currentTotal || cart.item_count === 0) {
          MESSAGE_ELEM.textContent = PRE_TEXT.replace(/\$([\d\.,]+)/g, formatMoney(THRESHOLD));
          PROGRESS_ELEM.style.width = '0%';
          PROGRESS_ELEM.textContent = '0%';
          CONTAINER.classList.remove(`completed-${SECTION_ID}`);
          return;
        }

        let percentage = (currentTotal / THRESHOLD) * 100;
        percentage = Math.min(percentage, 100);

        let message;
        if (currentTotal >= THRESHOLD) {
          message = POST_TEXT;
          CONTAINER.classList.add(`completed-${SECTION_ID}`);
        } else {
          const remaining = THRESHOLD - currentTotal;
          message = PRE_TEXT.replace(/\$[\d.,]+/g, formatMoney(remaining));
          CONTAINER.classList.remove(`completed-${SECTION_ID}`);
        }

        MESSAGE_ELEM.textContent = message;
        PROGRESS_ELEM.style.width = `${percentage}%`;
        PROGRESS_ELEM.textContent = `${Math.round(percentage)}%`;

      } catch (error) {
        console.error("Error al actualizar la barra de envÃ­o:", error);
        MESSAGE_ELEM.textContent = "Error al cargar el progreso del carrito.";
      }
    }

    updateShippingBar();
    setInterval(updateShippingBar, 2000);

    const observeCartChanges = () => {
      const observer = new MutationObserver(() => {
        clearTimeout(window.shippingBarUpdateTimeout);
        window.shippingBarUpdateTimeout = setTimeout(updateShippingBar, 300);
      });
      observer.observe(document.body, { childList: true, subtree: true, attributes: true });
    };

    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', observeCartChanges);
    } else {
      observeCartChanges();
    }
  })();
</script>

{% schema %}
{
  "name": "Barra EnvÃ­o Gratis",
  "settings": [
    {
      "type": "number",
      "id": "threshold",
      "label": "Monto Objetivo (CLP)",
      "default": 50000
    },
    {
      "type": "text",
      "id": "pre_text",
      "label": "Texto Antes de Alcanzar el Monto",
      "default": "Â¡EstÃ¡s a $10.000 de envÃ­o gratis! ðŸš€"
    },
    {
      "type": "text",
      "id": "post_text",
      "label": "Texto al Alcanzar el Monto",
      "default": "Â¡Felicidades! Ya tienes envÃ­o gratis. ðŸŽ‰"
    }
  ],
  "presets": [
    {
      "name": "Barra EnvÃ­o Gratis",
      "category": "Custom"
    }
  ]
}
{% endschema %}
